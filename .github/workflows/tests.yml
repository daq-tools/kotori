name: Tests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:

  tests:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ] # , macos-latest, windows-latest ]
        python-version: [ "3.6", "3.7", "3.8", "3.9" ]
        mosquitto-version: [ "1.6", "2.0" ]
        influxdb-version: [ "1.7", "1.8" ]
        grafana-version: [ "6.7.6", "7.5.15", "8.4.5" ]
        include:
        - os: ubuntu-latest
          path: ~/.cache/pip
        #- os: macos-latest
        #  path: ~/Library/Caches/pip
        #- os: windows-latest
        #  path: ~\AppData\Local\pip\Cache

    # https://docs.github.com/en/free-pro-team@latest/actions/guides/about-service-containers
    services:

      influxdb:
        image: influxdb:${{ matrix.influxdb-version }}
        ports:
          - 8083:8083
          - 8086:8086

      grafana:
        image: grafana/grafana:${{ matrix.grafana-version }}
        ports:
          - 3000:3000
        env:
          GF_SECURITY_ADMIN_PASSWORD: admin

      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017

    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}

    #name: OS ${{ matrix.os }}, Python ${{ matrix.python-version }}, Mosquitto ${{ matrix.mosquitto-version }}, InfluxDB ${{ matrix.influxdb-version }}, Grafana ${{ matrix.grafana-version }}
    name: Python ${{ matrix.python-version }}, Mosquitto ${{ matrix.mosquitto-version }}, InfluxDB ${{ matrix.influxdb-version }}, Grafana ${{ matrix.grafana-version }}
    steps:

      - name: Acquire sources
        uses: actions/checkout@v2

      - name: Start Mosquitto
        uses: namoshek/mosquitto-github-action@v1
        with:
          version: ${{ matrix.mosquitto-version }}
          ports: '1883:1883 8883:8883'
          # certificates: ${{ github.workspace }}/.ci/tls-certificates
          config: ${{ github.workspace }}/etc/test/mosquitto-no-auth.conf
          # container-name: 'mqtt'

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Apply caching of dependencies
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache even if the output from `hashFiles()` has not changed.
          CACHE_NUMBER: 1
        with:
          path: ${{ matrix.path }}
          key: ${{ runner.os }}-pip-py${{ matrix.python-version }}-${{ hashFiles('setup.py', 'requirements-test.txt', 'requirements-docs.txt') }}-${{ env.CACHE_NUMBER }}

      - name: Install program
        run: |
          pip install wheel
          pip install --requirement=requirements-test.txt
          pip install --editable=.[daq,daq_geospatial,export,scientific,firmware]

      - name: Run tests
        run: |

          # Run unit- and integration-tests
          pytest kotori test

          # Run doctests
          export NOSE_IGNORE_FILES="test_.*\.py"
          nosetests \
            --with-doctest --doctest-tests --doctest-extension=rst \
            kotori/*.py \
            kotori/daq/{application,graphing,services,storage,strategy} \
            kotori/daq/intercom/{mqtt/paho.py,udp.py,wamp.py} \
            kotori/firmware kotori/io kotori/vendor/hiveeyes

      - name: Setup Graphviz
        uses: ts-graphviz/setup-graphviz@v1

      - name: Build documentation
        if: matrix.python-version >= '3.6'
        run: |
          pip install --requirement=requirements-docs.txt
          SPHINXOPTS="-j auto" make --directory=doc html
