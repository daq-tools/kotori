name: Tests
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:

  tests:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ] # , macos-latest, windows-latest ]
        python-version: [ "3.6", "3.7", "3.8" ]
        include:
        - os: ubuntu-latest
          path: ~/.cache/pip
        #- os: macos-latest
        #  path: ~/Library/Caches/pip
        #- os: windows-latest
        #  path: ~\AppData\Local\pip\Cache

    # https://docs.github.com/en/free-pro-team@latest/actions/guides/about-service-containers
    services:

      # TODO: Maybe use https://github.com/marketplace/actions/mosquitto-mqtt-broker-in-github-actions
      mosquitto:
        image: eclipse-mosquitto:1.6.12
        ports:
          - 1883:1883
          - 9001:9001

      influxdb:
        image: influxdb:1.8.3
        ports:
          - 8083:8083
          - 8086:8086

      grafana:
        image: grafana/grafana:7.3.3
        ports:
          - 3000:3000
        env:
          GF_SECURITY_ADMIN_PASSWORD: admin

      mongodb:
        image: mongo:4.4.3
        ports:
          - 27017:27017

    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}

    name: Python ${{ matrix.python-version }} on OS ${{ matrix.os }}
    steps:

      - name: Acquire sources
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Apply caching of dependencies
        uses: actions/cache@v2
        with:
          path: ${{ matrix.path }}
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py', 'requirements-dev.txt', 'requirements-test.txt', 'requirements-docs.txt') }}
          restore-keys: |
           ${{ runner.os }}-pip-

      - name: Install program
        run: |
          pip install --requirement=requirements-dev.txt
          pip install --requirement=requirements-test.txt
          pip install --editable=.[daq,daq_geospatial,export,scientific,firmware]

      - name: Run tests
        run: |

          # Run unit- and integration-tests
          pytest kotori test

          # Run doctests
          export NOSE_IGNORE_FILES="test_.*\.py"
          nosetests \
            --with-doctest --doctest-tests --doctest-extension=rst \
            kotori/*.py \
            kotori/daq/{application,graphing,services,storage,strategy} \
            kotori/daq/intercom/{mqtt/paho.py,udp.py,wamp.py} \
            kotori/firmware kotori/io kotori/vendor/hiveeyes

      - name: Setup Graphviz
        uses: ts-graphviz/setup-graphviz@v1

      - name: Build documentation
        run: |
          pip install --requirement=requirements-docs.txt
          SPHINXOPTS="-j auto" make --directory=doc html
